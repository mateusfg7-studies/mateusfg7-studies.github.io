<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ux, ui, styles, typing on Mateus Felipe</title><link>https://mateusfg7-studies.github.io/tags/ux-ui-styles-typing/</link><description>Recent content in ux, ui, styles, typing on Mateus Felipe</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mateusfg7-studies.github.io/tags/ux-ui-styles-typing/index.xml" rel="self" type="application/rss+xml"/><item><title>Typed Props on Styled Components</title><link>https://mateusfg7-studies.github.io/posts/typed-props-on-styled-components/</link><pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate><guid>https://mateusfg7-studies.github.io/posts/typed-props-on-styled-components/</guid><description>How Just create a interface and add the type with the property read only. After, add the interface to the tag declaration with &amp;lt; &amp;gt;:
interface Props { readonly color: string } const Text = styled.h1&amp;lt;Props&amp;gt;` color: ${props =&amp;gt; props.color}; ` const Component = () =&amp;gt; &amp;lt;Text color=&amp;quot;white&amp;quot;&amp;gt;Title&amp;lt;/Text&amp;gt; export default Component referencies Using custom props: https://styled-components.com/docs/api#using-custom-props [archive]</description></item></channel></rss>